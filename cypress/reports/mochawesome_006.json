{
  "stats": {
    "suites": 5,
    "tests": 24,
    "passes": 22,
    "pending": 0,
    "failures": 2,
    "start": "2024-01-23T10:42:44.305Z",
    "end": "2024-01-23T10:43:00.631Z",
    "duration": 16326,
    "testsRegistered": 24,
    "passPercent": 91.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "45bb9209-218f-46d6-b32e-ea1025266848",
      "title": "",
      "fullFile": "cypress/e2e/18-22.recipes.cy.js",
      "file": "cypress/e2e/18-22.recipes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c57d2489-1d0b-48e4-b474-a47f927fe848",
          "title": "18 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "18 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de comida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 708,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "b6f04c13-486c-4536-8ca7-f841346f0009",
              "parentUUID": "c57d2489-1d0b-48e4-b474-a47f927fe848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "fullTitle": "18 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card Caso as receitas sejam de bebida, deve-se carregar as 12 primeiras receitas",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "197f3a94-e4cc-4715-af64-920a210e98fe",
              "parentUUID": "c57d2489-1d0b-48e4-b474-a47f927fe848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "fullTitle": "18 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card A tela tem os data-testids de todos os 12 cards da tela de comidas",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (let index = 0; index < 12; index += 1) {\n  cy.get(`[data-testid=\"${index}-recipe-card\"]`);\n  cy.get(`[data-testid=\"${index}-card-img\"]`);\n  cy.get(`[data-testid=\"${index}-card-name\"]`);\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "d16af7dd-7267-4b86-9818-431dbb45ca05",
              "parentUUID": "c57d2489-1d0b-48e4-b474-a47f927fe848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "fullTitle": "18 - Carregue as 12 primeiras receitas de comidas ou bebidas, uma em cada card A tela tem os data-testids de todos os 12 cards da tela de bebidas",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nfor (let index = 0; index < 12; index += 1) {\n  cy.get(`[data-testid=\"${index}-recipe-card\"]`);\n  cy.get(`[data-testid=\"${index}-card-img\"]`);\n  cy.get(`[data-testid=\"${index}-card-name\"]`);\n}\ncy.get('[data-testid=\"12-recipe-card\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-img\"]').should('not.exist');\ncy.get('[data-testid=\"12-card-name\"]').should('not.exist');",
              "err": {},
              "uuid": "4685e08f-a3d3-46bd-8bdc-4b69925adfe1",
              "parentUUID": "c57d2489-1d0b-48e4-b474-a47f927fe848",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6f04c13-486c-4536-8ca7-f841346f0009",
            "197f3a94-e4cc-4715-af64-920a210e98fe",
            "d16af7dd-7267-4b86-9818-431dbb45ca05",
            "4685e08f-a3d3-46bd-8bdc-4b69925adfe1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1274,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "309b6a8f-983d-46c5-b774-3f099b9d4681",
          "title": "19 - Implemente os botões de categoria para serem utilizados como filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "fullTitle": "19 - Implemente os botões de categoria para serem utilizados como filtro Caso as receitas sejam de comida, deve-se exibir as 5 primeiras categorias de comida",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\nmealCategoriesMock.meals.slice(0, 5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`);\n});\nmealCategoriesMock.meals.slice(5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`).should('not.exist');\n});",
              "err": {},
              "uuid": "ec191824-9b2c-4c9b-925e-8d225d990a0f",
              "parentUUID": "309b6a8f-983d-46c5-b774-3f099b9d4681",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "fullTitle": "19 - Implemente os botões de categoria para serem utilizados como filtro Caso as receitas sejam de bebida, deve-se exibir as 5 primeiras categorias de bebida",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ndrinkCategoriesMock.drinks.slice(0, 5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`);\n});\ndrinkCategoriesMock.drinks.slice(5).forEach(({\n  strCategory: category\n}) => {\n  cy.get(`[data-testid=\"${category}-category-filter\"]`).should('not.exist');\n});",
              "err": {},
              "uuid": "2dbeee15-0ffe-4c33-9ee5-d788a57d58e1",
              "parentUUID": "309b6a8f-983d-46c5-b774-3f099b9d4681",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a cobertura de 45% da tela de receitas",
              "fullTitle": "19 - Implemente os botões de categoria para serem utilizados como filtro Verifica a cobertura de 45% da tela de receitas",
              "timedOut": null,
              "duration": 3187,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getCoverage().its('Recipes.functions.pct', {\n  timeout: 0\n}).should('be.gte', 45.00);\ncy.getCoverage().its('Recipes.branches.pct', {\n  timeout: 0\n}).should('be.gte', 45.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run cy-coverage ./src\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/tests/App.test.tsx > Farewell, front-end\nTestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n<body>\n  <div>\n    <div>\n      <form>\n        <label\n          for=\"email-input\"\n        >\n          Email:\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n          />\n        </label>\n        <label\n          for=\"password-input\"\n        >\n          Senha:\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n          />\n        </label>\n        <button\n          data-testid=\"login-submit-btn\"\n        >\n          Enter\n        </button>\n      </form>\n    </div>\n  </div>\n</body>\n ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n ❯ src/tests/App.test.tsx:8:30\n      6|   // Este arquivo pode ser modificado ou deletado sem problemas\n      7|   render(<App />);\n      8|   const linkElement = screen.getByText(/TRYBE/i);\n       |                              ^\n      9|   expect(linkElement).toBeInTheDocument();\n     10| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run cy-coverage ./src\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/tests/App.test.tsx > Farewell, front-end\nTestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n<body>\n  <div>\n    <div>\n      <form>\n        <label\n          for=\"email-input\"\n        >\n          Email:\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n          />\n        </label>\n        <label\n          for=\"password-input\"\n        >\n          Senha:\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n          />\n        </label>\n        <button\n          data-testid=\"login-submit-btn\"\n        >\n          Enter\n        </button>\n      </form>\n    </div>\n  </div>\n</body>\n ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n ❯ src/tests/App.test.tsx:8:30\n      6|   // Este arquivo pode ser modificado ou deletado sem problemas\n      7|   render(<App />);\n      8|   const linkElement = screen.getByText(/TRYBE/i);\n       |                              ^\n      9|   expect(linkElement).toBeInTheDocument();\n     10| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n\nhttps://on.cypress.io/api/task\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:135281:70)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://recipes-app-test/./cypress/support/commands.js:26:45)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run cy-coverage ./src\n  ⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n  \n   FAIL  src/tests/App.test.tsx > Farewell, front-end\n  TestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n  \n  Ignored nodes: comments, script, style\n  <body>\n    <div>\n      <div>\n        <form>\n          <label\n            for=\"email-input\"\n          >\n            Email:\n            <input\n              data-testid=\"email-input\"\n              type=\"email\"\n            />\n          </label>\n          <label\n            for=\"password-input\"\n          >\n            Senha:\n            <input\n              data-testid=\"password-input\"\n              type=\"password\"\n            />\n          </label>\n          <button\n            data-testid=\"login-submit-btn\"\n          >\n            Enter\n          </button>\n        </form>\n      </div>\n    </div>\n  </body>\n   ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n   ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n   ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n   ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n   ❯ src/tests/App.test.tsx:8:30\n        6|   // Este arquivo pode ser modificado ou deletado sem problemas\n        7|   render(<App />);\n        8|   const linkElement = screen.getByText(/TRYBE/i);\n         |                              ^\n        9|   expect(linkElement).toBeInTheDocument();\n       10| });\n  \n  ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n  \n  \n      at ChildProcess.exithandler (node:child_process:419:12)\n      at ChildProcess.emit (node:events:514:28)\n      at ChildProcess.emit (node:domain:489:12)\n      at maybeClose (node:internal/child_process:1091:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "dc017ad3-e89b-4172-9558-af0405d7b3f4",
              "parentUUID": "309b6a8f-983d-46c5-b774-3f099b9d4681",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec191824-9b2c-4c9b-925e-8d225d990a0f",
            "2dbeee15-0ffe-4c33-9ee5-d788a57d58e1"
          ],
          "failures": [
            "dc017ad3-e89b-4172-9558-af0405d7b3f4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3433,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ed06a973-24b5-44d2-aa53-a954ca53f857",
          "title": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Beef\", deve-se carregar as 12 primeiras receitas de \"Beef\"",
              "timedOut": null,
              "duration": 333,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);",
              "err": {},
              "uuid": "db4f04c1-2776-471f-96e2-dff2fb25a3d8",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Breakfast\", deve-se carregar as 12 primeiras receitas de \"Breakfast\"",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Breakfast-category-filter\"]').click();\ncheckFirstTwelveRecipes(breakfastMealsMock.meals);",
              "err": {},
              "uuid": "8a9c2b86-cce6-4c72-8144-eb058f4dd9db",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Chicken\", deve-se carregar as 12 primeiras receitas de \"Chicken\"",
              "timedOut": null,
              "duration": 304,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Chicken-category-filter\"]').click();\ncheckFirstTwelveRecipes(chickenMealsMock.meals);",
              "err": {},
              "uuid": "03186539-f5e9-4026-b700-b3f2fec36afb",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Dessert\", deve-se carregar as 12 primeiras receitas de \"Dessert\"",
              "timedOut": null,
              "duration": 314,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Dessert-category-filter\"]').click();\ncheckFirstTwelveRecipes(dessertMealsMock.meals);",
              "err": {},
              "uuid": "218b6d6e-9e57-4830-9706-fbdb1b29b0c2",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida e a categoria seja \"Goat\", deve-se carregar as 12 primeiras receitas de \"Goat\"",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Goat-category-filter\"]').click();\ncheckFirstTwelveRecipes(goatMealsMock.meals);",
              "err": {},
              "uuid": "2cac2aa2-ea9d-452f-b7bb-a8a81ebc0083",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Ordinary Drink\", deve-se carregar as 12 primeiras receitas de \"Ordinary Drink\"",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);",
              "err": {},
              "uuid": "2497f9d0-c495-4604-9ec4-2dd73bbae99a",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocktail\", deve-se carregar as 12 primeiras receitas de \"Cocktail\"",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocktail-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocktailDrinksMock.drinks, false);",
              "err": {},
              "uuid": "781f5916-d12c-4721-b2f4-89ea3f215f61",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Shake\", deve-se carregar as 12 primeiras receitas de \"Shake\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Shake\", deve-se carregar as 12 primeiras receitas de \"Shake\"",
              "timedOut": null,
              "duration": 300,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Shake-category-filter\"]').click();\ncheckFirstTwelveRecipes(milkDrinksMock.drinks, false);",
              "err": {},
              "uuid": "a9574572-4dbb-45ad-9015-aae8fdd79f7f",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Other/Unknown\", deve-se carregar as 12 primeiras receitas de \"Other/Unknown\"",
              "timedOut": null,
              "duration": 296,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Other/Unknown-category-filter\"]').click();\ncheckFirstTwelveRecipes(otherDrinksMock.drinks, false);",
              "err": {},
              "uuid": "3329989e-f215-4dee-ba47-746997a96d91",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida e a categoria seja \"Cocoa\", deve-se carregar as 12 primeiras receitas de \"Cocoa\"",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Cocoa-category-filter\"]').click();\ncheckFirstTwelveRecipes(cocoaDrinksMock.drinks, false);",
              "err": {},
              "uuid": "e75fc3bd-ee2b-49dc-b130-eb92d8725814",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de comida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 502,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(beefMealsMock.meals);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "3cc2ebe1-9a7f-4bf8-a4d9-065dcbea7ae1",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "fullTitle": "20 - Implemente o filtro das receitas por meio da API ao clicar no filtro de categoria Caso as receitas sejam de bebida deve existir a opção de filtrar por todas as categorias",
              "timedOut": null,
              "duration": 499,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(ordinaryDrinksMock.drinks, false);\ncy.get('[data-testid=\"All-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "133e06b8-eab1-465c-8de0-bd2aaae6d316",
              "parentUUID": "ed06a973-24b5-44d2-aa53-a954ca53f857",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db4f04c1-2776-471f-96e2-dff2fb25a3d8",
            "8a9c2b86-cce6-4c72-8144-eb058f4dd9db",
            "03186539-f5e9-4026-b700-b3f2fec36afb",
            "218b6d6e-9e57-4830-9706-fbdb1b29b0c2",
            "2cac2aa2-ea9d-452f-b7bb-a8a81ebc0083",
            "2497f9d0-c495-4604-9ec4-2dd73bbae99a",
            "781f5916-d12c-4721-b2f4-89ea3f215f61",
            "a9574572-4dbb-45ad-9015-aae8fdd79f7f",
            "3329989e-f215-4dee-ba47-746997a96d91",
            "e75fc3bd-ee2b-49dc-b130-eb92d8725814",
            "3cc2ebe1-9a7f-4bf8-a4d9-065dcbea7ae1",
            "133e06b8-eab1-465c-8de0-bd2aaae6d316"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3958,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3d9ae006-156d-4e39-aa5f-ac71d0fc4da1",
          "title": "21 - Implemente o filtro como um toggle, o qual se for selecionado novamente, o app deve retornar as receitas sem nenhum filtro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "21 - Implemente o filtro como um toggle, o qual se for selecionado novamente, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de comida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 369,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncy.get('[data-testid=\"Beef-category-filter\"]').click();\ncheckFirstTwelveRecipes(mealsMock.meals);",
              "err": {},
              "uuid": "9b65e318-de4f-44c4-87fd-645ec79cd870",
              "parentUUID": "3d9ae006-156d-4e39-aa5f-ac71d0fc4da1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "fullTitle": "21 - Implemente o filtro como um toggle, o qual se for selecionado novamente, o app deve retornar as receitas sem nenhum filtro Caso as receitas sejam de bebida e o filtro tenha sido selecionado novamente, deve-se retornar as 12 primeiras receitas sem filtro",
              "timedOut": null,
              "duration": 377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncy.get('[data-testid=\"Ordinary Drink-category-filter\"]').click();\ncheckFirstTwelveRecipes(drinksMock.drinks, false);",
              "err": {},
              "uuid": "82f3f3aa-4665-40cc-8a4b-9dd499c765ef",
              "parentUUID": "3d9ae006-156d-4e39-aa5f-ac71d0fc4da1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b65e318-de4f-44c4-87fd-645ec79cd870",
            "82f3f3aa-4665-40cc-8a4b-9dd499c765ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 746,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b9697cfa-5e99-492b-a4c4-ca29281b1188",
          "title": "22 - Redirecione a pessoa usuária ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "22 - Redirecione a pessoa usuária ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de comida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(loc => expect(loc.pathname).to.eq('/meals/52977'));",
              "err": {},
              "uuid": "220dd631-7cf7-4b01-9787-b32d0f552731",
              "parentUUID": "b9697cfa-5e99-492b-a4c4-ca29281b1188",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "fullTitle": "22 - Redirecione a pessoa usuária ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Caso as receitas sejam de bebida a rota deve mudar para a tela de detalhes da receita",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"0-recipe-card\"]').click();\ncy.location().should(loc => expect(loc.pathname).to.eq('/drinks/15997'));",
              "err": {},
              "uuid": "da88177f-9eda-4120-819a-fc9af0fa73da",
              "parentUUID": "b9697cfa-5e99-492b-a4c4-ca29281b1188",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a cobertura de 90% da Tela de Receitas",
              "fullTitle": "22 - Redirecione a pessoa usuária ao clicar no card para a tela de detalhes, que deve mudar a rota e conter o id da receita na URL Verifica a cobertura de 90% da Tela de Receitas",
              "timedOut": null,
              "duration": 3323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getCoverage().its('Recipes.functions.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);\ncy.getCoverage().its('Recipes.branches.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run cy-coverage ./src\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/tests/App.test.tsx > Farewell, front-end\nTestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n<body>\n  <div>\n    <div>\n      <form>\n        <label\n          for=\"email-input\"\n        >\n          Email:\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n          />\n        </label>\n        <label\n          for=\"password-input\"\n        >\n          Senha:\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n          />\n        </label>\n        <button\n          data-testid=\"login-submit-btn\"\n        >\n          Enter\n        </button>\n      </form>\n    </div>\n  </div>\n</body>\n ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n ❯ src/tests/App.test.tsx:8:30\n      6|   // Este arquivo pode ser modificado ou deletado sem problemas\n      7|   render(<App />);\n      8|   const linkElement = screen.getByText(/TRYBE/i);\n       |                              ^\n      9|   expect(linkElement).toBeInTheDocument();\n     10| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run cy-coverage ./src\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/tests/App.test.tsx > Farewell, front-end\nTestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n<body>\n  <div>\n    <div>\n      <form>\n        <label\n          for=\"email-input\"\n        >\n          Email:\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n          />\n        </label>\n        <label\n          for=\"password-input\"\n        >\n          Senha:\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n          />\n        </label>\n        <button\n          data-testid=\"login-submit-btn\"\n        >\n          Enter\n        </button>\n      </form>\n    </div>\n  </div>\n</body>\n ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n ❯ src/tests/App.test.tsx:8:30\n      6|   // Este arquivo pode ser modificado ou deletado sem problemas\n      7|   render(<App />);\n      8|   const linkElement = screen.getByText(/TRYBE/i);\n       |                              ^\n      9|   expect(linkElement).toBeInTheDocument();\n     10| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n\nhttps://on.cypress.io/api/task\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:135281:70)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://recipes-app-test/./cypress/support/commands.js:26:45)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run cy-coverage ./src\n  ⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n  \n   FAIL  src/tests/App.test.tsx > Farewell, front-end\n  TestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n  \n  Ignored nodes: comments, script, style\n  <body>\n    <div>\n      <div>\n        <form>\n          <label\n            for=\"email-input\"\n          >\n            Email:\n            <input\n              data-testid=\"email-input\"\n              type=\"email\"\n            />\n          </label>\n          <label\n            for=\"password-input\"\n          >\n            Senha:\n            <input\n              data-testid=\"password-input\"\n              type=\"password\"\n            />\n          </label>\n          <button\n            data-testid=\"login-submit-btn\"\n          >\n            Enter\n          </button>\n        </form>\n      </div>\n    </div>\n  </body>\n   ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n   ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n   ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n   ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n   ❯ src/tests/App.test.tsx:8:30\n        6|   // Este arquivo pode ser modificado ou deletado sem problemas\n        7|   render(<App />);\n        8|   const linkElement = screen.getByText(/TRYBE/i);\n         |                              ^\n        9|   expect(linkElement).toBeInTheDocument();\n       10| });\n  \n  ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n  \n  \n      at ChildProcess.exithandler (node:child_process:419:12)\n      at ChildProcess.emit (node:events:514:28)\n      at ChildProcess.emit (node:domain:489:12)\n      at maybeClose (node:internal/child_process:1091:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "7716b98a-2882-4c1c-b174-3eb0809633eb",
              "parentUUID": "b9697cfa-5e99-492b-a4c4-ca29281b1188",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "220dd631-7cf7-4b01-9787-b32d0f552731",
            "da88177f-9eda-4120-819a-fc9af0fa73da"
          ],
          "failures": [
            "7716b98a-2882-4c1c-b174-3eb0809633eb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3749,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}