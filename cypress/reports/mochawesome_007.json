{
  "stats": {
    "suites": 13,
    "tests": 34,
    "passes": 32,
    "pending": 0,
    "failures": 2,
    "start": "2024-01-23T10:43:03.742Z",
    "end": "2024-01-23T10:43:18.986Z",
    "duration": 15244,
    "testsRegistered": 34,
    "passPercent": 94.11764705882352,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "addfb944-fb47-4e4f-bf0e-2ceb1a4179a7",
      "title": "",
      "fullFile": "cypress/e2e/23-35.recipe_detail.cy.js",
      "file": "cypress/e2e/23-35.recipe_detail.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a39232cf-8101-46ae-8d44-1647abcdad38",
          "title": "23 - Realize uma request para a API passando o `id` da receita que deve estar disponível nos parâmetros da URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a requisição para a API de comidas foi realizada",
              "fullTitle": "23 - Realize uma request para a API passando o `id` da receita que deve estar disponível nos parâmetros da URL Verifica se a requisição para a API de comidas foi realizada",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    cy.spy(win, 'fetch');\n  }\n});\ncy.window().its('fetch').should('be.calledWith', 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=52771');",
              "err": {},
              "uuid": "8413e7c1-ebf3-4c89-8692-6571e9fc44d8",
              "parentUUID": "a39232cf-8101-46ae-8d44-1647abcdad38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a requisição para a API de bebidas foi realizada",
              "fullTitle": "23 - Realize uma request para a API passando o `id` da receita que deve estar disponível nos parâmetros da URL Verifica se a requisição para a API de bebidas foi realizada",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    cy.spy(win, 'fetch');\n  }\n});\ncy.window().its('fetch').should('be.calledWith', 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=178319');",
              "err": {},
              "uuid": "51ac7257-765e-443e-a836-d5d69d7c4ccd",
              "parentUUID": "a39232cf-8101-46ae-8d44-1647abcdad38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8413e7c1-ebf3-4c89-8692-6571e9fc44d8",
            "51ac7257-765e-443e-a836-d5d69d7c4ccd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 631,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "69edfb90-fcd8-429d-ae56-b384ecf42ae6",
          "title": "24 - Desenvolva a tela de modo que contenha uma imagem da receita, o título, a categoria em caso de comidas e se é ou não alcoólico em caso de bebidas, uma lista de ingredientes seguidos pelas quantidades, instruções, um vídeo do youtube incorporado e recomendações",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se os elementos descritos no protótipo existem na tela de detalhes de comida",
              "fullTitle": "24 - Desenvolva a tela de modo que contenha uma imagem da receita, o título, a categoria em caso de comidas e se é ou não alcoólico em caso de bebidas, uma lista de ingredientes seguidos pelas quantidades, instruções, um vídeo do youtube incorporado e recomendações Verifica se os elementos descritos no protótipo existem na tela de detalhes de comida",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"recipe-photo\"]').should('have.prop', 'tagName').should('eq', 'IMG');\ncy.get('[data-testid=\"recipe-title\"]').contains('Spicy Arrabiata Penne');\ncy.get('[data-testid=\"recipe-category\"]').contains('Vegetarian');\ncy.get('[data-testid=\"0-ingredient-name-and-measure\"]').contains('penne rigate');\ncy.get('[data-testid=\"0-ingredient-name-and-measure\"]').contains('1 pound');\ncy.get('[data-testid=\"1-ingredient-name-and-measure\"]').contains('olive oil');\ncy.get('[data-testid=\"1-ingredient-name-and-measure\"]').contains('1/4 cup');\ncy.get('[data-testid=\"2-ingredient-name-and-measure\"]').contains('garlic');\ncy.get('[data-testid=\"2-ingredient-name-and-measure\"]').contains('3 cloves');\ncy.get('[data-testid=\"3-ingredient-name-and-measure\"]').contains('chopped tomatoes');\ncy.get('[data-testid=\"3-ingredient-name-and-measure\"]').contains('1 tin');\ncy.get('[data-testid=\"4-ingredient-name-and-measure\"]').contains('red chile flakes');\ncy.get('[data-testid=\"4-ingredient-name-and-measure\"]').contains('1/2 teaspoon');\ncy.get('[data-testid=\"5-ingredient-name-and-measure\"]').contains('italian seasoning');\ncy.get('[data-testid=\"5-ingredient-name-and-measure\"]').contains('1/2 teaspoon');\ncy.get('[data-testid=\"6-ingredient-name-and-measure\"]').contains('basil');\ncy.get('[data-testid=\"6-ingredient-name-and-measure\"]').contains('6 leaves');\ncy.get('[data-testid=\"7-ingredient-name-and-measure\"]').contains('Parmigiano-Reggiano');\ncy.get('[data-testid=\"7-ingredient-name-and-measure\"]').contains('spinkling');\ncy.get('[data-testid=\"instructions\"]').contains(oneMeal.meals[0].strInstructions);\ncy.get('[data-testid=\"video\"]').should('exist');",
              "err": {},
              "uuid": "af5c132f-a95e-423a-9d22-c7d74408193d",
              "parentUUID": "69edfb90-fcd8-429d-ae56-b384ecf42ae6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela de comida possui todos os atributos data-testid",
              "fullTitle": "24 - Desenvolva a tela de modo que contenha uma imagem da receita, o título, a categoria em caso de comidas e se é ou não alcoólico em caso de bebidas, uma lista de ingredientes seguidos pelas quantidades, instruções, um vídeo do youtube incorporado e recomendações A tela de comida possui todos os atributos data-testid",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"recipe-photo\"]');\ncy.get('[data-testid=\"recipe-title\"]');\ncy.get('[data-testid=\"recipe-category\"]');\ncy.get('[data-testid=\"0-ingredient-name-and-measure\"]');\ncy.get('[data-testid=\"instructions\"]');\ncy.get('[data-testid=\"video\"]');",
              "err": {},
              "uuid": "332906da-58e9-46a6-bfa4-3651c725028a",
              "parentUUID": "69edfb90-fcd8-429d-ae56-b384ecf42ae6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os elementos descritos no protótipo existem na tela de detalhes de bebida",
              "fullTitle": "24 - Desenvolva a tela de modo que contenha uma imagem da receita, o título, a categoria em caso de comidas e se é ou não alcoólico em caso de bebidas, uma lista de ingredientes seguidos pelas quantidades, instruções, um vídeo do youtube incorporado e recomendações Verifica se os elementos descritos no protótipo existem na tela de detalhes de bebida",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"recipe-photo\"]').should('have.prop', 'tagName').should('eq', 'IMG');\ncy.get('[data-testid=\"recipe-title\"]').contains('Aquamarine');\ncy.get('[data-testid=\"recipe-category\"]').contains('Alcoholic');\ncy.get('[data-testid=\"0-ingredient-name-and-measure\"]').contains('Hpnotiq');\ncy.get('[data-testid=\"0-ingredient-name-and-measure\"]').contains('2 oz');\ncy.get('[data-testid=\"1-ingredient-name-and-measure\"]').contains('Pineapple Juice');\ncy.get('[data-testid=\"1-ingredient-name-and-measure\"]').contains('1 oz');\ncy.get('[data-testid=\"2-ingredient-name-and-measure\"]').contains('Banana Liqueur');\ncy.get('[data-testid=\"2-ingredient-name-and-measure\"]').contains('1 oz');\ncy.get('[data-testid=\"instructions\"]').contains(oneDrink.drinks[0].strInstructions);",
              "err": {},
              "uuid": "50f121ce-3949-40dd-a36a-a7c6b11db066",
              "parentUUID": "69edfb90-fcd8-429d-ae56-b384ecf42ae6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A tela de bebidas possui todos os atributos data-testid",
              "fullTitle": "24 - Desenvolva a tela de modo que contenha uma imagem da receita, o título, a categoria em caso de comidas e se é ou não alcoólico em caso de bebidas, uma lista de ingredientes seguidos pelas quantidades, instruções, um vídeo do youtube incorporado e recomendações A tela de bebidas possui todos os atributos data-testid",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"recipe-photo\"]');\ncy.get('[data-testid=\"recipe-title\"]');\ncy.get('[data-testid=\"recipe-category\"]');\ncy.get('[data-testid=\"0-ingredient-name-and-measure\"]');\ncy.get('[data-testid=\"instructions\"]');",
              "err": {},
              "uuid": "230965bf-8452-411e-b6ea-44e786458762",
              "parentUUID": "69edfb90-fcd8-429d-ae56-b384ecf42ae6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af5c132f-a95e-423a-9d22-c7d74408193d",
            "332906da-58e9-46a6-bfa4-3651c725028a",
            "50f121ce-3949-40dd-a36a-a7c6b11db066",
            "230965bf-8452-411e-b6ea-44e786458762"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 581,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2bcbab41-0bd1-4bb9-a3c7-3bd695891014",
          "title": "25 - Implemente as recomendações. Para receitas de comida, a recomendação deverá ser bebida, já para as receitas de bebida a recomendação deverá ser comida",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a requisição para a API de bebidas foi realizada",
              "fullTitle": "25 - Implemente as recomendações. Para receitas de comida, a recomendação deverá ser bebida, já para as receitas de bebida a recomendação deverá ser comida Verifica se a requisição para a API de bebidas foi realizada",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    cy.spy(win, 'fetch');\n  }\n});\ncy.window().its('fetch').should('be.calledWith', 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');",
              "err": {},
              "uuid": "ca3443b0-b393-4c10-a613-9fbeaf7e2364",
              "parentUUID": "2bcbab41-0bd1-4bb9-a3c7-3bd695891014",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a requisição para a API de comidas foi realizada",
              "fullTitle": "25 - Implemente as recomendações. Para receitas de comida, a recomendação deverá ser bebida, já para as receitas de bebida a recomendação deverá ser comida Verifica se a requisição para a API de comidas foi realizada",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    cy.spy(win, 'fetch');\n  }\n});\ncy.window().its('fetch').should('be.calledWith', 'https://www.themealdb.com/api/json/v1/1/search.php?s=');",
              "err": {},
              "uuid": "da9250c7-c677-4e48-a717-d85ae56959c8",
              "parentUUID": "2bcbab41-0bd1-4bb9-a3c7-3bd695891014",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca3443b0-b393-4c10-a613-9fbeaf7e2364",
            "da9250c7-c677-4e48-a717-d85ae56959c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 195,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "48da508f-fa88-4ef3-bd95-fe00a0e85f32",
          "title": "26 - Implemente os 6 cards de recomendação, mostrando apenas 2. O scroll é horizontal, similar a um `carousel`",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existem todas as recomendações na tela de detalhes de uma comida",
              "fullTitle": "26 - Implemente os 6 cards de recomendação, mostrando apenas 2. O scroll é horizontal, similar a um `carousel` Verifica se existem todas as recomendações na tela de detalhes de uma comida",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid*=\"recommendation-card\"]').should('have.length', 6);\ncy.get('[data-testid=\"0-recommendation-card\"]').should('exist').and('be.visible');\ncy.get('[data-testid=\"0-recommendation-title\"]').contains('GG');\ncy.get('[data-testid=\"1-recommendation-card\"]').should('exist').and('be.visible');\ncy.get('[data-testid=\"1-recommendation-title\"]').contains('A1');\ncy.get('[data-testid=\"2-recommendation-card\"]').should('exist').and('not.be.visible');\ncy.get('[data-testid=\"2-recommendation-title\"]').contains('ABC');\ncy.get('[data-testid=\"3-recommendation-card\"]').should('exist').and('not.be.visible');\ncy.get('[data-testid=\"3-recommendation-title\"]').contains('Kir');\ncy.get('[data-testid=\"4-recommendation-card\"]').should('exist').and('not.be.visible');\ncy.get('[data-testid=\"4-recommendation-title\"]').contains('747');\ncy.get('[data-testid=\"5-recommendation-card\"]').should('exist').and('not.be.visible');\ncy.get('[data-testid=\"5-recommendation-title\"]').contains('252');",
              "err": {},
              "uuid": "8713821e-84da-47f2-b797-99b9eb88b883",
              "parentUUID": "48da508f-fa88-4ef3-bd95-fe00a0e85f32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existem todas as recomendações na tela de detalhes de uma bebida",
              "fullTitle": "26 - Implemente os 6 cards de recomendação, mostrando apenas 2. O scroll é horizontal, similar a um `carousel` Verifica se existem todas as recomendações na tela de detalhes de uma bebida",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid*=\"recommendation-card\"]').should('have.length', 6);\ncy.get('[data-testid=\"0-recommendation-card\"]').should('exist').and('be.visible');\ncy.get('[data-testid=\"0-recommendation-title\"]').contains('Corba');\ncy.get('[data-testid=\"1-recommendation-card\"]').should('exist').and('be.visible');\ncy.get('[data-testid=\"1-recommendation-title\"]').contains('Kumpir');\ncy.get('[data-testid=\"2-recommendation-card\"]').should('exist').and('not.be.visible');\ncy.get('[data-testid=\"2-recommendation-title\"]').contains('Dal fry');\ncy.get('[data-testid=\"3-recommendation-card\"]').should('exist').and('not.be.visible');\ncy.get('[data-testid=\"3-recommendation-title\"]').contains('Poutine');\ncy.get('[data-testid=\"4-recommendation-card\"]').should('exist').and('not.be.visible');\ncy.get('[data-testid=\"4-recommendation-title\"]').contains('Lasagne');\ncy.get('[data-testid=\"5-recommendation-card\"]').should('exist').and('not.be.visible');\ncy.get('[data-testid=\"5-recommendation-title\"]').contains('Timbits');",
              "err": {},
              "uuid": "29e696b8-e3be-4126-bf5d-e7e9b1b56552",
              "parentUUID": "48da508f-fa88-4ef3-bd95-fe00a0e85f32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8713821e-84da-47f2-b797-99b9eb88b883",
            "29e696b8-e3be-4126-bf5d-e7e9b1b56552"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 378,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ecb02da-10a0-4a2c-8c0d-f081937a3015",
          "title": "27 - Desenvolva um botão de nome \"Start Recipe\" que deve ficar fixo na parte de baixo da tela o tempo todo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica posicionamento do botão na tela de detalhes de comida",
              "fullTitle": "27 - Desenvolva um botão de nome \"Start Recipe\" que deve ficar fixo na parte de baixo da tela o tempo todo Verifica posicionamento do botão na tela de detalhes de comida",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"start-recipe-btn\"]').should('have.css', 'position', 'fixed').and('have.css', 'bottom', '0px');",
              "err": {},
              "uuid": "3b47c563-b8ae-42a5-90f5-73e587509ddf",
              "parentUUID": "7ecb02da-10a0-4a2c-8c0d-f081937a3015",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica posicionamento do botão na tela de detalhes de bebida",
              "fullTitle": "27 - Desenvolva um botão de nome \"Start Recipe\" que deve ficar fixo na parte de baixo da tela o tempo todo Verifica posicionamento do botão na tela de detalhes de bebida",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"start-recipe-btn\"]').should('have.css', 'position', 'fixed').and('have.css', 'bottom', '0px');",
              "err": {},
              "uuid": "b9132e4d-166c-4db6-9e63-a1b9aaa633e4",
              "parentUUID": "7ecb02da-10a0-4a2c-8c0d-f081937a3015",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b47c563-b8ae-42a5-90f5-73e587509ddf",
            "b9132e4d-166c-4db6-9e63-a1b9aaa633e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 219,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "04c9268d-2d1f-480b-a132-b689f953fd02",
          "title": "28 - Implemente a solução de forma que, caso a receita já tenha sido feita, o botão \"Start Recipe\" desapareça",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se botão de iniciar receita não é visível na tela de detalhes de uma comida",
              "fullTitle": "28 - Implemente a solução de forma que, caso a receita já tenha sido feita, o botão \"Start Recipe\" desapareça Verifica se botão de iniciar receita não é visível na tela de detalhes de uma comida",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    const doneRecipes = [{\n      \"id\": \"52771\",\n      \"type\": \"meal\",\n      \"nationality\": \"Italian\",\n      \"category\": \"Vegetarian\",\n      \"alcoholicOrNot\": \"\",\n      \"name\": \"Spicy Arrabiata Penne\",\n      \"image\": \"https://www.themealdb.com/images/media/meals/ustsqw1468250014.jpg\",\n      \"doneDate\": \"22/6/2020\",\n      \"tags\": [\"Pasta\", \"Curry\"]\n    }];\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"start-recipe-btn\"]').should('not.exist');",
              "err": {},
              "uuid": "1ae7ea38-a74f-43d2-a945-71ba308a87e2",
              "parentUUID": "04c9268d-2d1f-480b-a132-b689f953fd02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se botão de iniciar receita não é visível na tela de detalhes de uma bebida",
              "fullTitle": "28 - Implemente a solução de forma que, caso a receita já tenha sido feita, o botão \"Start Recipe\" desapareça Verifica se botão de iniciar receita não é visível na tela de detalhes de uma bebida",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    const doneRecipes = [{\n      \"id\": \"178319\",\n      \"type\": \"drink\",\n      \"nationality\": \"\",\n      \"category\": \"Cocktail\",\n      \"alcoholicOrNot\": \"Alcoholic\",\n      \"name\": \"Aquamarine\",\n      \"image\": \"https://www.thecocktaildb.com/images/media/drink/zvsre31572902738.jpg\",\n      \"doneDate\": \"23/6/2020\",\n      \"tags\": []\n    }];\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"start-recipe-btn\"]').should('not.exist');",
              "err": {},
              "uuid": "f13a01ad-7ca8-4771-a630-26648d8d62d9",
              "parentUUID": "04c9268d-2d1f-480b-a132-b689f953fd02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a cobertura de 45% da Tela de Detalhes da Receita",
              "fullTitle": "28 - Implemente a solução de forma que, caso a receita já tenha sido feita, o botão \"Start Recipe\" desapareça Verifica a cobertura de 45% da Tela de Detalhes da Receita",
              "timedOut": null,
              "duration": 3245,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getCoverage().its('RecipeDetails.functions.pct', {\n  timeout: 0\n}).should('be.gte', 45.00);\ncy.getCoverage().its('RecipeDetails.branches.pct', {\n  timeout: 0\n}).should('be.gte', 45.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run cy-coverage ./src\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/tests/App.test.tsx > Farewell, front-end\nTestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n<body>\n  <div>\n    <div>\n      <form>\n        <label\n          for=\"email-input\"\n        >\n          Email:\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n          />\n        </label>\n        <label\n          for=\"password-input\"\n        >\n          Senha:\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n          />\n        </label>\n        <button\n          data-testid=\"login-submit-btn\"\n        >\n          Enter\n        </button>\n      </form>\n    </div>\n  </div>\n</body>\n ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n ❯ src/tests/App.test.tsx:8:30\n      6|   // Este arquivo pode ser modificado ou deletado sem problemas\n      7|   render(<App />);\n      8|   const linkElement = screen.getByText(/TRYBE/i);\n       |                              ^\n      9|   expect(linkElement).toBeInTheDocument();\n     10| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run cy-coverage ./src\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/tests/App.test.tsx > Farewell, front-end\nTestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n<body>\n  <div>\n    <div>\n      <form>\n        <label\n          for=\"email-input\"\n        >\n          Email:\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n          />\n        </label>\n        <label\n          for=\"password-input\"\n        >\n          Senha:\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n          />\n        </label>\n        <button\n          data-testid=\"login-submit-btn\"\n        >\n          Enter\n        </button>\n      </form>\n    </div>\n  </div>\n</body>\n ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n ❯ src/tests/App.test.tsx:8:30\n      6|   // Este arquivo pode ser modificado ou deletado sem problemas\n      7|   render(<App />);\n      8|   const linkElement = screen.getByText(/TRYBE/i);\n       |                              ^\n      9|   expect(linkElement).toBeInTheDocument();\n     10| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n\nhttps://on.cypress.io/api/task\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:135281:70)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://recipes-app-test/./cypress/support/commands.js:26:45)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run cy-coverage ./src\n  ⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n  \n   FAIL  src/tests/App.test.tsx > Farewell, front-end\n  TestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n  \n  Ignored nodes: comments, script, style\n  <body>\n    <div>\n      <div>\n        <form>\n          <label\n            for=\"email-input\"\n          >\n            Email:\n            <input\n              data-testid=\"email-input\"\n              type=\"email\"\n            />\n          </label>\n          <label\n            for=\"password-input\"\n          >\n            Senha:\n            <input\n              data-testid=\"password-input\"\n              type=\"password\"\n            />\n          </label>\n          <button\n            data-testid=\"login-submit-btn\"\n          >\n            Enter\n          </button>\n        </form>\n      </div>\n    </div>\n  </body>\n   ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n   ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n   ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n   ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n   ❯ src/tests/App.test.tsx:8:30\n        6|   // Este arquivo pode ser modificado ou deletado sem problemas\n        7|   render(<App />);\n        8|   const linkElement = screen.getByText(/TRYBE/i);\n         |                              ^\n        9|   expect(linkElement).toBeInTheDocument();\n       10| });\n  \n  ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n  \n  \n      at ChildProcess.exithandler (node:child_process:419:12)\n      at ChildProcess.emit (node:events:514:28)\n      at ChildProcess.emit (node:domain:489:12)\n      at maybeClose (node:internal/child_process:1091:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "1e2277a2-7d6c-4e86-84b9-02d33687f624",
              "parentUUID": "04c9268d-2d1f-480b-a132-b689f953fd02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ae7ea38-a74f-43d2-a945-71ba308a87e2",
            "f13a01ad-7ca8-4771-a630-26648d8d62d9"
          ],
          "failures": [
            "1e2277a2-7d6c-4e86-84b9-02d33687f624"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3414,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3ae3df9-3bdf-4341-9e6e-21409c7ca990",
          "title": "29 - Implemente a solução de modo que, caso a receita tenha sido iniciada mas não finalizada, o texto do botão deve ser \"Continue Recipe\"",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica botão de \"Continue Recipe\" na tela de detalhes de uma comida",
              "fullTitle": "29 - Implemente a solução de modo que, caso a receita tenha sido iniciada mas não finalizada, o texto do botão deve ser \"Continue Recipe\" Verifica botão de \"Continue Recipe\" na tela de detalhes de uma comida",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    const inProgressRecipes = {\n      meals: {\n        52771: []\n      }\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"start-recipe-btn\"]').contains('Continue Recipe');",
              "err": {},
              "uuid": "6e33acdf-f597-4f91-8420-8265703fb265",
              "parentUUID": "b3ae3df9-3bdf-4341-9e6e-21409c7ca990",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica botão de \"Continue Recipe\" na tela de detalhes de uma bebida",
              "fullTitle": "29 - Implemente a solução de modo que, caso a receita tenha sido iniciada mas não finalizada, o texto do botão deve ser \"Continue Recipe\" Verifica botão de \"Continue Recipe\" na tela de detalhes de uma bebida",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    const inProgressRecipes = {\n      drinks: {\n        178319: []\n      }\n    };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"start-recipe-btn\"]').contains('Continue Recipe');",
              "err": {},
              "uuid": "5e21e538-c697-49ea-b88e-dc7577ab3443",
              "parentUUID": "b3ae3df9-3bdf-4341-9e6e-21409c7ca990",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e33acdf-f597-4f91-8420-8265703fb265",
            "5e21e538-c697-49ea-b88e-dc7577ab3443"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 206,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "38c69ca1-f28c-4ece-b538-89dbe0c55180",
          "title": "30 - Redirecione a pessoa usuária caso o botão \"Start Recipe\" seja clicado, a rota deve mudar para a tela de receita em progresso",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Redireciona para tela de receita da comida em progresso",
              "fullTitle": "30 - Redirecione a pessoa usuária caso o botão \"Start Recipe\" seja clicado, a rota deve mudar para a tela de receita em progresso Redireciona para tela de receita da comida em progresso",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"start-recipe-btn\"]').click();\ncy.location().should(loc => expect(loc.pathname).to.eq('/meals/52771/in-progress'));",
              "err": {},
              "uuid": "b6164efb-bb91-4175-a73e-ad9181d30cc9",
              "parentUUID": "38c69ca1-f28c-4ece-b538-89dbe0c55180",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Redireciona para tela de receita da bebida em progresso",
              "fullTitle": "30 - Redirecione a pessoa usuária caso o botão \"Start Recipe\" seja clicado, a rota deve mudar para a tela de receita em progresso Redireciona para tela de receita da bebida em progresso",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"start-recipe-btn\"]').click();\ncy.location().should(loc => expect(loc.pathname).to.eq('/drinks/178319/in-progress'));",
              "err": {},
              "uuid": "34ade816-105b-4065-b456-8a76f5625d58",
              "parentUUID": "38c69ca1-f28c-4ece-b538-89dbe0c55180",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6164efb-bb91-4175-a73e-ad9181d30cc9",
            "34ade816-105b-4065-b456-8a76f5625d58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 438,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "198b82c3-cb7d-4410-bf08-fb44f329140e",
          "title": "31 - Implemente um botão de compartilhar e um de favoritar a receita",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se os botões estão disponíveis na tela de detalhes de uma comida",
              "fullTitle": "31 - Implemente um botão de compartilhar e um de favoritar a receita Verifica se os botões estão disponíveis na tela de detalhes de uma comida",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"share-btn\"]').should('exist');\ncy.get('[data-testid=\"favorite-btn\"]').should('exist');",
              "err": {},
              "uuid": "83e7bd12-7070-42e4-807f-544fe842d233",
              "parentUUID": "198b82c3-cb7d-4410-bf08-fb44f329140e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os botões estão disponíveis na tela de detalhes de uma bebida",
              "fullTitle": "31 - Implemente um botão de compartilhar e um de favoritar a receita Verifica se os botões estão disponíveis na tela de detalhes de uma bebida",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"share-btn\"]').should('exist');\ncy.get('[data-testid=\"favorite-btn\"]').should('exist');",
              "err": {},
              "uuid": "76e5eef4-b25a-44b6-b91e-e06244c2bb0d",
              "parentUUID": "198b82c3-cb7d-4410-bf08-fb44f329140e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83e7bd12-7070-42e4-807f-544fe842d233",
            "76e5eef4-b25a-44b6-b91e-e06244c2bb0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5aaed27d-ff2d-408a-943c-8a282e895060",
          "title": "32 - Implemente a solução de forma que, ao clicar no botão de compartilhar, o link da receita dentro do app deve ser copiado para o clipboard e uma mensagem avisando que o link foi copiado deve aparecer",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica a mensagem \"Link copied!\" e se o link da receita da comida foi copiado para o clipboard",
              "fullTitle": "32 - Implemente a solução de forma que, ao clicar no botão de compartilhar, o link da receita dentro do app deve ser copiado para o clipboard e uma mensagem avisando que o link foi copiado deve aparecer Verifica a mensagem \"Link copied!\" e se o link da receita da comida foi copiado para o clipboard",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n    cy.stub(win.navigator.clipboard, 'writeText').resolves('URL').as('clipboard');\n  }\n});\ncy.get('[data-testid=\"share-btn\"]').click();\ncy.contains('Link copied!');\ncy.get('@clipboard').should('be.calledWithExactly', `http://localhost:3000/meals/52771`);",
              "err": {},
              "uuid": "1c566d34-ee59-496a-84e3-2c04918887ac",
              "parentUUID": "5aaed27d-ff2d-408a-943c-8a282e895060",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a mensagem \"Link copied!\" e se o link da receita da bebida foi copiado para o clipboard",
              "fullTitle": "32 - Implemente a solução de forma que, ao clicar no botão de compartilhar, o link da receita dentro do app deve ser copiado para o clipboard e uma mensagem avisando que o link foi copiado deve aparecer Verifica a mensagem \"Link copied!\" e se o link da receita da bebida foi copiado para o clipboard",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n    cy.stub(win.navigator.clipboard, 'writeText').resolves('URL').as('clipboard');\n  }\n});\ncy.get('[data-testid=\"share-btn\"]').click();\ncy.contains('Link copied!');\ncy.get('@clipboard').should('be.calledWithExactly', `http://localhost:3000/drinks/178319`);",
              "err": {},
              "uuid": "bc8ab21f-e0ef-4bfc-a838-06ed8019a143",
              "parentUUID": "5aaed27d-ff2d-408a-943c-8a282e895060",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c566d34-ee59-496a-84e3-2c04918887ac",
            "bc8ab21f-e0ef-4bfc-a838-06ed8019a143"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe654d7b-1d5a-4cab-969b-568182b8bd6a",
          "title": "33 - Salve as receitas favoritas no `localStorage` na chave `favoriteRecipes`",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se após favoritar receita de uma comida, ela é salva corretamente no localStorage",
              "fullTitle": "33 - Salve as receitas favoritas no `localStorage` na chave `favoriteRecipes` Verifica se após favoritar receita de uma comida, ela é salva corretamente no localStorage",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').click().then(() => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const expectedFavoriteRecipes = [{\n    id: '52771',\n    type: 'meal',\n    nationality: 'Italian',\n    category: 'Vegetarian',\n    alcoholicOrNot: '',\n    name: 'Spicy Arrabiata Penne',\n    image: 'https://www.themealdb.com/images/media/meals/ustsqw1468250014.jpg'\n  }];\n  expect(favoriteRecipes).to.deep.eq(expectedFavoriteRecipes);\n});",
              "err": {},
              "uuid": "f3b96dc5-5cbe-4708-aa80-8a344f5a2968",
              "parentUUID": "fe654d7b-1d5a-4cab-969b-568182b8bd6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após favoritar receita de uma bebida, ela é salva corretamente no localStorage",
              "fullTitle": "33 - Salve as receitas favoritas no `localStorage` na chave `favoriteRecipes` Verifica se após favoritar receita de uma bebida, ela é salva corretamente no localStorage",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').click().then(() => {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const expectedFavoriteRecipes = [{\n    id: '178319',\n    type: 'drink',\n    nationality: '',\n    category: 'Cocktail',\n    alcoholicOrNot: 'Alcoholic',\n    name: 'Aquamarine',\n    image: 'https://www.thecocktaildb.com/images/media/drink/zvsre31572902738.jpg'\n  }];\n  expect(favoriteRecipes).to.deep.eq(expectedFavoriteRecipes);\n});",
              "err": {},
              "uuid": "b7bf41bb-91bd-4e3f-a02a-53b2827c71da",
              "parentUUID": "fe654d7b-1d5a-4cab-969b-568182b8bd6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3b96dc5-5cbe-4708-aa80-8a344f5a2968",
            "b7bf41bb-91bd-4e3f-a02a-53b2827c71da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 406,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75bc2db7-a736-421f-9dc9-09edb021e519",
          "title": "34 - Implemente o ícone do coração (favorito) de modo que: deve vir preenchido caso a receita esteja favoritada e \"despreenchido\" caso contrário",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a comida favoritada vem com o coração preenchido",
              "fullTitle": "34 - Implemente o ícone do coração (favorito) de modo que: deve vir preenchido caso a receita esteja favoritada e \"despreenchido\" caso contrário Verifica se a comida favoritada vem com o coração preenchido",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    const favoriteRecipes = [{\n      \"id\": \"52771\",\n      \"type\": \"meal\",\n      \"nationality\": \"Italian\",\n      \"category\": \"Vegetarian\",\n      \"alcoholicOrNot\": \"\",\n      \"name\": \"Spicy Arrabiata Penne\",\n      \"image\": \"https://www.themealdb.com/images/media/meals/ustsqw1468250014.jpg\"\n    }];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'blackHeartIcon');",
              "err": {},
              "uuid": "d405c130-93b5-49e5-8917-6828f9502343",
              "parentUUID": "75bc2db7-a736-421f-9dc9-09edb021e519",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a comida não favoritada vem com o coração \"despreenchido\"",
              "fullTitle": "34 - Implemente o ícone do coração (favorito) de modo que: deve vir preenchido caso a receita esteja favoritada e \"despreenchido\" caso contrário Verifica se a comida não favoritada vem com o coração \"despreenchido\"",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'whiteHeartIcon');",
              "err": {},
              "uuid": "cdc7f6c2-83ad-4af7-9f9e-4216a1224b33",
              "parentUUID": "75bc2db7-a736-421f-9dc9-09edb021e519",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a bebida favoritada vem com o coração preenchido",
              "fullTitle": "34 - Implemente o ícone do coração (favorito) de modo que: deve vir preenchido caso a receita esteja favoritada e \"despreenchido\" caso contrário Verifica se a bebida favoritada vem com o coração preenchido",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    const favoriteRecipes = [{\n      \"id\": \"178319\",\n      \"type\": \"drink\",\n      \"nationality\": \"\",\n      \"category\": \"Cocktail\",\n      \"alcoholicOrNot\": \"Alcoholic\",\n      \"name\": \"Aquamarine\",\n      \"image\": \"https://www.thecocktaildb.com/images/media/drink/zvsre31572902738.jpg\"\n    }];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'blackHeartIcon');",
              "err": {},
              "uuid": "573a8e2d-3706-4acb-9e5b-2776cba06ed1",
              "parentUUID": "75bc2db7-a736-421f-9dc9-09edb021e519",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a bebida não favoritada vem com o coração \"despreenchido\"",
              "fullTitle": "34 - Implemente o ícone do coração (favorito) de modo que: deve vir preenchido caso a receita esteja favoritada e \"despreenchido\" caso contrário Verifica se a bebida não favoritada vem com o coração \"despreenchido\"",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'whiteHeartIcon');",
              "err": {},
              "uuid": "c696e3c7-b9ad-40ff-9ea2-a358d801bbb9",
              "parentUUID": "75bc2db7-a736-421f-9dc9-09edb021e519",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d405c130-93b5-49e5-8917-6828f9502343",
            "cdc7f6c2-83ad-4af7-9f9e-4216a1224b33",
            "573a8e2d-3706-4acb-9e5b-2776cba06ed1",
            "c696e3c7-b9ad-40ff-9ea2-a358d801bbb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 497,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5dcb75e3-88ab-4b12-af94-a3c0d07a212d",
          "title": "35 - Implemente a lógica no botão de favoritar. Caso seja clicado, o ícone do coração deve mudar seu estado atual, caso esteja preenchido deve mudar para \"despreenchido\" e vice-versa",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Favorita a comida",
              "fullTitle": "35 - Implemente a lógica no botão de favoritar. Caso seja clicado, o ícone do coração deve mudar seu estado atual, caso esteja preenchido deve mudar para \"despreenchido\" e vice-versa Favorita a comida",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'whiteHeartIcon');\ncy.get('[data-testid=\"favorite-btn\"]').click();\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'blackHeartIcon');",
              "err": {},
              "uuid": "0089bb91-3502-413f-93bb-a53c7d2d8e51",
              "parentUUID": "5dcb75e3-88ab-4b12-af94-a3c0d07a212d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Desfavorita a comida",
              "fullTitle": "35 - Implemente a lógica no botão de favoritar. Caso seja clicado, o ícone do coração deve mudar seu estado atual, caso esteja preenchido deve mudar para \"despreenchido\" e vice-versa Desfavorita a comida",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/meals/52771', {\n  onBeforeLoad(win) {\n    const favoriteRecipes = [{\n      \"id\": \"52771\",\n      \"type\": \"meal\",\n      \"nationality\": \"Italian\",\n      \"category\": \"Vegetarian\",\n      \"alcoholicOrNot\": \"\",\n      \"name\": \"Spicy Arrabiata Penne\",\n      \"image\": \"https://www.themealdb.com/images/media/meals/ustsqw1468250014.jpg\"\n    }];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'blackHeartIcon');\ncy.get('[data-testid=\"favorite-btn\"]').click();\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'whiteHeartIcon');",
              "err": {},
              "uuid": "da6fad1e-ae13-406a-8428-71f39317f2a8",
              "parentUUID": "5dcb75e3-88ab-4b12-af94-a3c0d07a212d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Favorita a bebida",
              "fullTitle": "35 - Implemente a lógica no botão de favoritar. Caso seja clicado, o ícone do coração deve mudar seu estado atual, caso esteja preenchido deve mudar para \"despreenchido\" e vice-versa Favorita a bebida",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'whiteHeartIcon');\ncy.get('[data-testid=\"favorite-btn\"]').click();\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'blackHeartIcon');",
              "err": {},
              "uuid": "108b1c28-9b06-4029-b44d-5e382cac0b59",
              "parentUUID": "5dcb75e3-88ab-4b12-af94-a3c0d07a212d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Desfavorita a bebida",
              "fullTitle": "35 - Implemente a lógica no botão de favoritar. Caso seja clicado, o ícone do coração deve mudar seu estado atual, caso esteja preenchido deve mudar para \"despreenchido\" e vice-versa Desfavorita a bebida",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:3000/drinks/178319', {\n  onBeforeLoad(win) {\n    const favoriteRecipes = [{\n      \"id\": \"178319\",\n      \"type\": \"drink\",\n      \"category\": \"Cocktail\",\n      \"alcoholicOrNot\": \"Alcoholic\",\n      \"name\": \"Aquamarine\",\n      \"image\": \"https://www.thecocktaildb.com/images/media/drink/zvsre31572902738.jpg\"\n    }];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    win.fetch = fetchMock;\n  }\n});\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'blackHeartIcon');\ncy.get('[data-testid=\"favorite-btn\"]').click();\ncy.get('[data-testid=\"favorite-btn\"]').should('have.attr', 'src').should('include', 'whiteHeartIcon');",
              "err": {},
              "uuid": "b563bbee-6daa-481e-b432-d9601ddf69e1",
              "parentUUID": "5dcb75e3-88ab-4b12-af94-a3c0d07a212d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica a cobertura de 90% da Tela de Detalhes da Receita",
              "fullTitle": "35 - Implemente a lógica no botão de favoritar. Caso seja clicado, o ícone do coração deve mudar seu estado atual, caso esteja preenchido deve mudar para \"despreenchido\" e vice-versa Verifica a cobertura de 90% da Tela de Detalhes da Receita",
              "timedOut": null,
              "duration": 3272,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.getCoverage().its('RecipeDetails.functions.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);\ncy.getCoverage().its('RecipeDetails.branches.pct', {\n  timeout: 0\n}).should('be.gte', 90.00);",
              "err": {
                "message": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run cy-coverage ./src\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/tests/App.test.tsx > Farewell, front-end\nTestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n<body>\n  <div>\n    <div>\n      <form>\n        <label\n          for=\"email-input\"\n        >\n          Email:\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n          />\n        </label>\n        <label\n          for=\"password-input\"\n        >\n          Senha:\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n          />\n        </label>\n        <button\n          data-testid=\"login-submit-btn\"\n        >\n          Enter\n        </button>\n      </form>\n    </div>\n  </div>\n</body>\n ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n ❯ src/tests/App.test.tsx:8:30\n      6|   // Este arquivo pode ser modificado ou deletado sem problemas\n      7|   render(<App />);\n      8|   const linkElement = screen.getByText(/TRYBE/i);\n       |                              ^\n      9|   expect(linkElement).toBeInTheDocument();\n     10| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('getCoverage')` failed with the following error:\n\n> Command failed: npm run cy-coverage ./src\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/tests/App.test.tsx > Farewell, front-end\nTestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n\nIgnored nodes: comments, script, style\n<body>\n  <div>\n    <div>\n      <form>\n        <label\n          for=\"email-input\"\n        >\n          Email:\n          <input\n            data-testid=\"email-input\"\n            type=\"email\"\n          />\n        </label>\n        <label\n          for=\"password-input\"\n        >\n          Senha:\n          <input\n            data-testid=\"password-input\"\n            type=\"password\"\n          />\n        </label>\n        <button\n          data-testid=\"login-submit-btn\"\n        >\n          Enter\n        </button>\n      </form>\n    </div>\n  </div>\n</body>\n ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n ❯ src/tests/App.test.tsx:8:30\n      6|   // Este arquivo pode ser modificado ou deletado sem problemas\n      7|   render(<App />);\n      8|   const linkElement = screen.getByText(/TRYBE/i);\n       |                              ^\n      9|   expect(linkElement).toBeInTheDocument();\n     10| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n\nhttps://on.cypress.io/api/task\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:135281:70)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://recipes-app-test/./cypress/support/commands.js:26:45)\n\nFrom Node.js Internals:\n  Error: Command failed: npm run cy-coverage ./src\n  ⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯\n  \n   FAIL  src/tests/App.test.tsx > Farewell, front-end\n  TestingLibraryElementError: Unable to find an element with the text: /TRYBE/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.\n  \n  Ignored nodes: comments, script, style\n  <body>\n    <div>\n      <div>\n        <form>\n          <label\n            for=\"email-input\"\n          >\n            Email:\n            <input\n              data-testid=\"email-input\"\n              type=\"email\"\n            />\n          </label>\n          <label\n            for=\"password-input\"\n          >\n            Senha:\n            <input\n              data-testid=\"password-input\"\n              type=\"password\"\n            />\n          </label>\n          <button\n            data-testid=\"login-submit-btn\"\n          >\n            Enter\n          </button>\n        </form>\n      </div>\n    </div>\n  </body>\n   ❯ Object.getElementError node_modules/@testing-library/dom/dist/config.js:37:19\n   ❯ node_modules/@testing-library/dom/dist/query-helpers.js:76:38\n   ❯ node_modules/@testing-library/dom/dist/query-helpers.js:52:17\n   ❯ getByText node_modules/@testing-library/dom/dist/query-helpers.js:95:19\n   ❯ src/tests/App.test.tsx:8:30\n        6|   // Este arquivo pode ser modificado ou deletado sem problemas\n        7|   render(<App />);\n        8|   const linkElement = screen.getByText(/TRYBE/i);\n         |                              ^\n        9|   expect(linkElement).toBeInTheDocument();\n       10| });\n  \n  ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯\n  \n  \n      at ChildProcess.exithandler (node:child_process:419:12)\n      at ChildProcess.emit (node:events:514:28)\n      at ChildProcess.emit (node:domain:489:12)\n      at maybeClose (node:internal/child_process:1091:16)\n      at Process.ChildProcess._handle.onexit (node:internal/child_process:302:5)",
                "diff": null
              },
              "uuid": "1091fce2-0302-4fae-bf0c-efce5360fcdc",
              "parentUUID": "5dcb75e3-88ab-4b12-af94-a3c0d07a212d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0089bb91-3502-413f-93bb-a53c7d2d8e51",
            "da6fad1e-ae13-406a-8428-71f39317f2a8",
            "108b1c28-9b06-4029-b44d-5e382cac0b59",
            "b563bbee-6daa-481e-b432-d9601ddf69e1"
          ],
          "failures": [
            "1091fce2-0302-4fae-bf0c-efce5360fcdc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4074,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}